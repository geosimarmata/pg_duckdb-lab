services:
  postgres:
    image: pgduckdb/pgduckdb:17-main
    container_name: lab-postgres
    env_file: .env
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 30
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro

  metabase:
    image: metabase/metabase:latest
    container_name: lab-metabase
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${METABASE_PORT}:3000"
    environment:
      # Metabase APP DB â†’ persist di Postgres, BUKAN H2
      MB_DB_TYPE: postgres
      MB_DB_HOST: postgres
      MB_DB_PORT: 5432
      MB_DB_DBNAME: metabase_db
      MB_DB_USER: metabase_app
      MB_DB_PASS: ${METABASE_APP_PASSWORD}
      MB_JETTY_PORT: 3000
      MB_JETTY_HOST: 0.0.0.0
      MB_SITE_URL: "http://localhost:3000"
      MB_DB_CONNECTION_TIMEOUT_MS: 60000
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000/api/health"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 20s
